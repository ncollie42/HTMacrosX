// Code generated by templ@v0.2.364 DO NOT EDIT.

package view

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func SignError(msg string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<input id=\"onError\" type=\"text\" placeholder=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(msg))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" aria-invalid=\"true\" readonly>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func Signin() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_2 := templ.GetChildren(ctx)
		if var_2 == nil {
			var_2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<main class=\"container\"><article class=\"grid\"><section><hgroup><h1>")
		if err != nil {
			return err
		}
		var_3 := `Sign in`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><p>")
		if err != nil {
			return err
		}
		var_4 := `A minimalist macro tracker`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></hgroup><form hx-post=\"/signin\" hx-target=\"#onError\"><input type=\"text\" name=\"login\" placeholder=\"Login\" aria-label=\"Login\" autocomplete=\"nickname\" required><input type=\"password\" name=\"password\" placeholder=\"Password\" aria-label=\"Password\" autocomplete=\"current-password\" required><fieldset><label for=\"remember\"><input type=\"checkbox\" role=\"switch\" id=\"remember\" name=\"remember\"> ")
		if err != nil {
			return err
		}
		var_5 := `Remember me`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label></fieldset><button class=\"contrast\">")
		if err != nil {
			return err
		}
		var_6 := `Login`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></form><nav class=\"container-fluid\"><div><a>")
		if err != nil {
			return err
		}
		var_7 := `Forgot Your Password?`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div><div><a hx-boost=\"true\" href=\"/signup\">")
		if err != nil {
			return err
		}
		var_8 := `Need an Account?`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div></nav><div id=\"onError\"></div></section><div></div><!--")
		if err != nil {
			return err
		}
		var_9 := ` Room for img `
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("--></article></main>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func Signup() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_10 := templ.GetChildren(ctx)
		if var_10 == nil {
			var_10 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<main class=\"container\"><article class=\"grid\"><section><hgroup><h1>")
		if err != nil {
			return err
		}
		var_11 := `Sign up for an Account`
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><p>")
		if err != nil {
			return err
		}
		var_12 := `A minimalist macro tracker`
		_, err = templBuffer.WriteString(var_12)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></hgroup><form hx-post=\"/signup\" hx-target=\"#onError\"><input type=\"text\" name=\"login\" placeholder=\"Login\" aria-label=\"Login\" autocomplete=\"nickname\" required><input type=\"password\" name=\"password\" placeholder=\"Password\" aria-label=\"Password\" autocomplete=\"current-password\" required><button class=\"contrast\">")
		if err != nil {
			return err
		}
		var_13 := `Create My Account`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></form><nav class=\"container-fluid\"><div><a>")
		if err != nil {
			return err
		}
		var_14 := `Forgot Your Password?`
		_, err = templBuffer.WriteString(var_14)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div><div><a hx-boost=\"true\" href=\"/signin\">")
		if err != nil {
			return err
		}
		var_15 := `Have an Account`
		_, err = templBuffer.WriteString(var_15)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div></nav><div id=\"onError\"></div></section><div></div><!--")
		if err != nil {
			return err
		}
		var_16 := ` Room for img `
		_, err = templBuffer.WriteString(var_16)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("--></article></main>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
