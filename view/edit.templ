package view

import (
	db "myapp/DB"
	"fmt"
)

templ NameEdit(name string, ID string) {
  <input type="text" 
    placeholder={name}
    name="name"
    hx-trigger="keyup changed delay:500ms"
    hx-put={fmt.Sprint(ID, "/name")}></input>
}

templ MealEdit(meal db.Meal) {
  <th> <button hx-delete={fmt.Sprint(meal.ID,"/delete")} class="outline"><strong>Delete all</strong></button></th>
  <div class="grid">
    @NameEdit(meal.Name, meal.ID)
  </div>
  <figure>
    <table>
      <thread>
        <tr>
          <th scope="col"> Delete </th>
          <th scope="col"> Name </th>
          <th scope="col"> Calories </th>
          <th scope="col"> Protein </th>
          <th scope="col"> Fat </th>
          <th scope="col"> Carb</th>
          <th scope="col"> Grams</th>
        </tr>
      </thread>
      <tbody id="target">
        for _, food := range meal.Foods {
          @GramEdit(food)
        }
      </tbody>
    </table>
  </figure>
  <button hx-get={fmt.Sprint(meal.ID,"/food_search")} hx-target="closest body" hx-push-url="true">Add Food</button>
}

templ GramEdit(food db.Join) {
  <tr>
    <th>
      <button hx-delete={fmt.Sprint(food.JoinID,"/join")} hx-target="closest tr" class="outline">
        <strong>X</strong>
      </button>
    </th>
    <th scope="row"> {food.Name} </th>
    <th> {fmt.Sprintf("%.1f",food.Macros.Calories)}</th>
    <th> {fmt.Sprintf("%.1f",food.Macros.Protein)}</th>
    <th> {fmt.Sprintf("%.1f",food.Macros.Fat)}</th>
    <th> {fmt.Sprintf("%.1f",food.Macros.Carb)}</th>
    <th><input type="text" 
      placeholder={fmt.Sprint(food.Grams,"g")}
      name="grams"
      hx-put={fmt.Sprint(food.JoinID,"/join")}
      hx-trigger="change"
      hx-target="closest tr"
      hx-swap="outerHTML"
      /></th>
  </tr>
}

templ TemplateOverview(macros []db.MacroOverview, token string) {
  <figure hx-history="false">
    <table>
      <thead>
        <tr>
          <th scope="col"> Select </th>
          <th scope="col"> Meal </th>
          <th scope="col"> Calories</th>
          <th scope="col"> Fat</th>
          <th scope="col"> Carb</th>
          <th scope="col"> Fiber</th>
          <th scope="col"> Protein</th>
          <th scope="col"> Edit</th>
        </tr>
      </thead>
      <tbody>
      for _, m := range macros {
        <tr>
          <td>
            <button hx-post={fmt.Sprint("/template/",m.ID)}
            hx-vals={fmt.Sprintf(`{"token": "%s"}`, token)}>Use</button>
          </td>
          <th scope="row"> {m.Name} </th>
          <td> {fmt.Sprintf("%.1f",m.Macros.Calories) } </td>
          <td> {fmt.Sprintf("%.1f",m.Macros.Fat) } </td>
          <td> {fmt.Sprintf("%.1f",m.Macros.Carb) } </td>
          <td> {fmt.Sprintf("%.1f",m.Macros.Fiber) } </td>
          <td> {fmt.Sprintf("%.1f",m.Macros.Protein) } </td>
          <td><a href={templ.SafeURL(fmt.Sprint("/template/",m.ID))} role="button">EDIT</a></td>
        </tr>
      }
      </tbody>
    </table>
  </figure>
  <button hx-post="/template"> New template </button>
}